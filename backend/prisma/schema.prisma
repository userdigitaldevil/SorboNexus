// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  password  String
  isAdmin   Boolean @default(false)
  alumni    Alumni? @relation(fields: [alumniId], references: [id])
  alumniId  Int?
  annonces  Annonce[]
  links     Link[]
  ressources Ressource[]
}

model Alumni {
  id        Int      @id @default(autoincrement())
  name      String
  degree    String?
  position  String?
  field     String?
  domains   String[]
  gradient  String?
  color     String?
  linkedin  String?
  email     String?
  avatar    String?
  isAdmin   Boolean? @default(false)
  conseil   String?
  hidden    Boolean  @default(false)
  nationalities String[]
  stagesWorkedContestsExtracurriculars String?
  accountCreationDate DateTime @default(now())
  futureGoals String?
  anneeFinL3 String?
  profileEmail String?
  profileLinkedin String?
  profileCurrentPosition String?
  grades    Grade[]
  schoolsApplied SchoolApplied[]
  users     User[]
  updatedAt DateTime @updatedAt
}

model SchoolApplied {
  id        Int     @id @default(autoincrement())
  name      String
  status    String
  alumni    Alumni @relation(fields: [alumniId], references: [id])
  alumniId  Int
}

model Grade {
  id        Int     @id @default(autoincrement())
  subject   String
  value     String
  alumni    Alumni @relation(fields: [alumniId], references: [id])
  alumniId  Int
}

model Annonce {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  createdBy User     @relation(fields: [createdById], references: [id])
  createdById Int
}

model Link {
  id          Int      @id @default(autoincrement())
  title       String
  url         String
  description String
  category    String
  icon        String
  gradient    String

  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById Int
}

model Ressource {
  id          Int      @id @default(autoincrement())
  title       String
  subject     String
  description String
  icon        String
  gradient    String
  type        String
  category    String
  filter      String
  resourceUrl String?
  format      String?
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
